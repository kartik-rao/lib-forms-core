{"version":3,"sources":["webpack:///./src/views/FormHeaderView.tsx","webpack:///./src/views/FieldView.tsx","webpack:///./src/views/ColumnView.tsx","webpack:///./src/views/SectionView.tsx","webpack:///./src/views/PageView.tsx","webpack:///./src/views/FormView.tsx"],"names":["FormHeaderView","props","store","Error","className","style","marginBottom","title","subTitle","subtitle","extra","showSteps","numPages","value","currentPage","suffix","span","desc","CascaderView","then","module","default","CheckboxGroupView","CheckboxView","DatePickerView","DateRangeView","HtmlFragmentView","InputView","NumberView","RadioGroupView","RadioView","SelectView","SliderView","StarRatingView","SwitchView","TextAreaView","TextBlockView","TransferView","FieldView","onChange","e","target","field","setValue","onBlur","setTouched","id","inputType","type","fieldClass","labelAlign","itemLayoutOptions","form","itemLayout","fallback","uuid","isDisabled","Item","label","hasFeedback","touched","errors","validateStatus","wrapperCol","labelCol","layout","help","helpText","required","isRequired","ColumnView","column","bordered","fields","map","key","SectionView","numColumns","section","columns","length","formLayoutOptions","showSectionBorders","showSectionTitles","padding","size","gutter","PageView","showPageTitles","page","sections","sn","FormView","height","overflow","content","description","border","onSubmit","handleSubmit","Content","overflowY","backgroundColor","pages","Footer","width","marginTop","textAlign","disabled","Object","keys","isValid","isSubmitting","marginLeft","htmlType","onClick","nextPage","prevPage"],"mappings":"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","file":"core.chunk.js","sourcesContent":["import { Col, PageHeader, Row, Statistic } from \"antd\";\nimport * as React from \"react\";\nimport { observer, useObserver } from 'mobx-react';\nimport { formStoreContext } from '../store/FormStoreProvider';\n\nexport const FormHeaderView : React.FC<{desc: string, title: string, subtitle: string, showSteps: boolean, currentPage: number, numPages: number}> = (props) => {\n    const store = React.useContext(formStoreContext);\n    if(!store) throw new Error(\"Store is  null\");\n\n    return useObserver(() => {\n        return <div className=\"fl-shadow-bottom\" style={{ marginBottom: '2px'}}>\n            <PageHeader className=\"fl-ph\" title={props.title} subTitle={props.subtitle} extra={(props.showSteps && store.numPages > 0 && <div>\n                <Statistic title=\"Page\" value={store.currentPage + 1} suffix={\"/ \" + store.numPages} />\n            </div>)} />\n            {props.title && <Row>\n                <Col span={20}>\n                    <div className=\"fl-ph-wrap\">\n                        <div className=\"fl-ph-content fl-ph-padding\">{props.desc}</div>\n                    </div>\n                </Col>\n            </Row>\n            }\n        </div>\n    });\n}","import { Form } from \"antd\";\nimport { useObserver } from \"mobx-react\";\nimport * as React from \"react\";\nimport { Field } from \"../models/field\";\nimport { IItemLayoutOptions } from '../models/layout';\nimport { formStoreContext } from '../store/FormStoreProvider';\n\n// import { CascaderView } from \"./controls/CascaderView\";\n// import { CheckboxGroupView } from \"./controls/CheckboxGroupView\";\n// import { CheckboxView } from \"./controls/CheckboxView\";\n// import { DatePickerView } from \"./controls/DatePickerView\";\n// import { DateRangeView } from \"./controls/DateRangeView\";\n// import { HtmlFragmentView } from './controls/HtmlFragmentView';\n// import { InputView } from \"./controls/InputView\";\n// import { NumberView } from \"./controls/NumberView\";\n// import { RadioGroupView } from \"./controls/RadioGroupView\";\n// import { RadioView } from './controls/RadioView';\n// import { SelectView } from \"./controls/SelectView\";\n// import { SliderView } from \"./controls/SliderView\";\n// import { StarRatingView } from \"./controls/StarRatingView\";\n// import { SwitchView } from \"./controls/SwitchView\";\n// import { TextAreaView } from \"./controls/TextAreaView\";\n// import { TextBlockView } from \"./controls/TextBlockView\";\n// import { TransferView } from \"./controls/TransferView\";\n\nconst CascaderView = React.lazy(() => import(/* webpackChunkName: \"cascader\" */ './controls/CascaderView').then((module) => {return {default: module.CascaderView}}));\nconst CheckboxGroupView = React.lazy(() => import(/* webpackChunkName: \"checkboxgroup\" */ './controls/CheckboxGroupView').then((module) => {return {default: module.CheckboxGroupView}}));\nconst CheckboxView = React.lazy(() => import(/* webpackChunkName: \"checkbox\" */ './controls/CheckboxView').then((module) => {return {default: module.CheckboxView}}));\nconst DatePickerView = React.lazy(() => import(/* webpackChunkName: \"datepicker\" */ './controls/DatePickerView').then((module) => {return {default: module.DatePickerView}}));\nconst DateRangeView = React.lazy(() => import(/* webpackChunkName: \"daterange\" */ './controls/DateRangeView').then((module) => {return {default: module.DateRangeView}}));\nconst HtmlFragmentView = React.lazy(() => import(/* webpackChunkName: \"htmlfragment\" */ './controls/HtmlFragmentView').then((module) => {return {default: module.HtmlFragmentView}}));\nconst InputView = React.lazy(() => import(/* webpackChunkName: \"input\" */ './controls/InputView').then((module) => {return {default: module.InputView}}));\nconst NumberView = React.lazy(() => import(/* webpackChunkName: \"number\" */ './controls/NumberView').then((module) => {return {default: module.NumberView}}));\nconst RadioGroupView = React.lazy(() => import(/* webpackChunkName: \"radiogroup\" */ './controls/RadioGroupView').then((module) => {return {default: module.RadioGroupView}}));\nconst RadioView = React.lazy(() => import(/* webpackChunkName: \"radio\" */ './controls/RadioView').then((module) => {return {default: module.RadioView}}));\nconst SelectView = React.lazy(() => import(/* webpackChunkName: \"select\" */ './controls/SelectView').then((module) => {return {default: module.SelectView}}));\nconst SliderView = React.lazy(() => import(/* webpackChunkName: \"slider\" */ './controls/SliderView').then((module) => {return {default: module.SliderView}}));\nconst StarRatingView = React.lazy(() => import(/* webpackChunkName: \"starrating\" */ './controls/StarRatingView').then((module) => {return {default: module.StarRatingView}}));\nconst SwitchView = React.lazy(() => import(/* webpackChunkName: \"switch\" */ './controls/SwitchView').then((module) => {return {default: module.SwitchView}}));\nconst TextAreaView = React.lazy(() => import(/* webpackChunkName: \"textarea\" */ './controls/TextAreaView').then((module) => {return {default: module.TextAreaView}}));\nconst TextBlockView = React.lazy(() => import(/* webpackChunkName: \"textblock\" */ './controls/TextBlockView').then((module) => {return {default: module.TextBlockView}}));\nconst TransferView = React.lazy(() => import(/* webpackChunkName: \"transfer\" */ './controls/TransferView').then((module) => {return {default: module.TransferView}}));\n\n\nexport const FieldView: React.FC<{field: Field, key: string}> = (props) => {\n    const store = React.useContext(formStoreContext);\n    if(!store) throw new Error(\"ERROR FieldView - store is null\");\n\n    let onChange = (e) => {\n        let value = e && typeof(e) == 'object' && e.target ? e.target.value: e;\n        props.field.setValue(value);\n    };\n\n    let onBlur = () => props.field.setTouched();\n    let {id, inputType, type } = props.field;\n\n    // Some fields only have inputtype\n    let fieldClass = inputType == type ? inputType : (type ? `${inputType}-${type}` : `${inputType}`);\n\n    // labelCol should only be passed if form is horizontal\n    // otherwise the control does not go to the next line\n    // Allow field item layout options to override form layout options\n\n    let labelAlign = props.field.itemLayoutOptions.labelAlign || store.form.itemLayoutOptions.labelAlign || 'left';\n    let itemLayout: IItemLayoutOptions = props.field.itemLayoutOptions || store.form.itemLayoutOptions || {};\n\n    return useObserver(() => {\n        return  <React.Suspense fallback=\"loading...\"><div id={`fl-field-${props.field.id}`} data-uuid={props.field.uuid} className={`fl-field fl-field-${fieldClass}`}>\n        { !props.field.isDisabled && <Form.Item label={props.field.label} labelAlign={labelAlign}\n        hasFeedback={store.touched[id] && store.errors[id] ? true : null}\n        validateStatus={store.touched[id] && store.errors[id] ?  \"error\" : \"validating\"}\n        wrapperCol={itemLayout.wrapperCol}\n        labelCol={store.form.layout == \"horizontal\" ? itemLayout.labelCol : null}\n        // extra={props.field.helpText}\n        help={store.touched[id] ? (store.errors[id] ? store.errors[id] : props.field.helpText): ''}\n        required={props.field.isRequired}>\n            {inputType == \"input\" && <InputView field={props.field} onChange={onChange} onBlur={onBlur}/>}\n            {inputType == \"radio\" && <RadioView field={props.field} onChange={onChange} />}\n            {inputType == \"checkbox\" && <CheckboxView field={props.field} onChange={onChange}  />}\n            {inputType == \"number\" && <NumberView field={props.field} onChange={onChange} onBlur={onBlur}  />}\n            {inputType == \"select\" && <SelectView field={props.field} onChange={onChange} onBlur={onBlur}  />}\n            {inputType == \"cascader\" && <CascaderView field={props.field}  onChange={onChange} />}\n            {inputType == \"radiogroup\" && <RadioGroupView field={props.field} onChange={onChange}  />}\n            {inputType == \"checkboxgroup\" && <CheckboxGroupView field={props.field} onChange={onChange}   />}\n            {inputType == \"textarea\" && <TextAreaView field={props.field} onChange={onChange}/>}\n            {inputType == \"daterange\" && <DateRangeView field={props.field}  onChange={onChange} />}\n            {inputType == \"datepicker\" && <DatePickerView field={props.field}  onChange={onChange} />}\n            {inputType == \"monthpicker\" && <DatePickerView field={props.field} onChange={onChange} />}\n            {inputType == \"timepicker\" && <DatePickerView field={props.field}  onChange={onChange} />}\n            {inputType == \"yearpicker\" && <DatePickerView field={props.field}  onChange={onChange} />}\n            {inputType == 'starrating' && <StarRatingView field={props.field} onChange={onChange} />}\n            {inputType == 'switch' && <SwitchView field={props.field} onChange={onChange} />}\n            {inputType == 'transfer' && <TransferView field={props.field} onChange={onChange} />}\n            {inputType == 'slider' && <SliderView field={props.field} onChange={onChange}/>}\n            {inputType == \"textblock\" && <TextBlockView field={props.field} onChange={onChange}/>}\n            {inputType == \"htmlfragment\" && <HtmlFragmentView field={props.field}/>}\n            </Form.Item> }\n    </div></React.Suspense>\n    });\n}","import { Card, Col } from \"antd\";\nimport { useObserver } from \"mobx-react\";\nimport * as React from \"react\";\nimport { Column } from \"../models/column\";\nimport { Field } from \"../models/field\";\nimport { formStoreContext } from '../store/FormStoreProvider';\nimport { FieldView } from \"./FieldView\";\n\nexport const ColumnView: React.FC<{column: Column, key: string, span: number}> = (props) => {\n    const store = React.useContext(formStoreContext);\n    if(!store) throw new Error(\"Store is  null\");\n    return useObserver(() => {\n        return <div className=\"fl-col\" data-uuid={props.column.uuid} id={`fl-col-${props.column.id}`}>\n        <Col span={props.column.span ? props.column.span : props.span}>\n            <Card bordered={false}>\n                {props.column.fields.map((field: Field) => {\n                    return <FieldView field={field} key={field.uuid}></FieldView>\n                })}\n            </Card>\n        </Col>\n    </div>\n    });\n}","import { Card, Row } from \"antd\";\nimport { useObserver } from \"mobx-react\";\nimport * as React from \"react\";\nimport { Column } from \"../models/column\";\nimport { Section } from \"../models/section\";\nimport { formStoreContext } from '../store/FormStoreProvider';\nimport { ColumnView } from \"./ColumnView\";\n\nexport const SectionView: React.FC<{section: Section, key: string}> = (props) => {\n    const store = React.useContext(formStoreContext);\n    if(!store) throw new Error(\"Store is  null\");\n    const numColumns = props.section.columns.length;\n    let span = numColumns <= 1 ? 24 : 24 / numColumns;\n    return useObserver(() => {\n        return <div className=\"fl-section\" data-uuid={props.section.uuid} id={`fl-section-${props.section.id}`}>\n        <Card bordered={store.form.formLayoutOptions.showSectionBorders} title={store.form.formLayoutOptions.showSectionTitles ? props.section.title : \"\"} style={{padding: \"1px\"}} size=\"small\">\n            <Row gutter={props.section.gutter}>\n                {props.section.columns.map((column: Column) => {\n                    return <ColumnView key={column.uuid} column={column} span={span}/>\n                })}\n            </Row>\n        </Card>\n    </div>\n    });\n}","import { Card } from \"antd\";\nimport { useObserver } from \"mobx-react\";\nimport * as React from \"react\";\nimport { Page } from \"../models/page\";\nimport { Section } from \"../models/section\";\nimport { formStoreContext } from '../store/FormStoreProvider';\nimport { SectionView } from \"./SectionView\";\n\nexport const PageView: React.FC<{page: Page}> = (props) => {\n    const store = React.useContext(formStoreContext);\n    if(!store) throw new Error(\"Store is  null\");\n    if(!store) throw new Error(\"Store is  null\");\n    return useObserver(() => {\n        return <div className=\"fl-page-wrap\">\n        <Card style={{padding:\"0\"}} bordered={false} title={store.form.formLayoutOptions.showPageTitles ? props.page.title : ''}>\n            <div id={`fl-page-${props.page.id || store.currentPage}`} className=\"fl-page\" data-uuid={`fl-page-${props.page.uuid}`}>\n                {props.page.sections.map((section: Section, sn: number) => {\n                    return <SectionView key={section.uuid} section={section}></SectionView>\n                })}\n            </div>\n        </Card>\n    </div>\n    });\n}","import { Button, Card, Col, Form, Icon, Layout, Row } from \"antd\";\nimport { useObserver } from \"mobx-react\";\nimport * as React from \"react\";\nimport { Page } from \"../models/page\";\nimport { formStoreContext } from '../store/FormStoreProvider';\nimport { FormHeaderView } from './FormHeaderView';\nimport { PageView } from \"./PageView\";\n\nexport const FormView : React.FC<any> = () => {\n    const store = React.useContext(formStoreContext);\n    if(!store) throw new Error(\"Store is  null\");\n\n    return useObserver(() => {\n        return store.form ? <Layout style={{height: '100%', overflow: 'hidden'}} className=\"fl-form-container\">\n                <FormHeaderView title={store.form.content.title} subtitle={store.form.content.subtitle} desc={store.form.description}\n                    currentPage={store.currentPage} numPages={store.numPages} showSteps={store.form.formLayoutOptions.showSteps} />\n                <Layout style={{overflow: 'hidden', border: '1px solid #ededed'}}>\n                    <Form onSubmit={(e) => store.form.handleSubmit(e)} layout={store.form.layout} style={{height: '100%'}} wrapperCol={store.form.formLayoutOptions.wrapperCol} labelCol={store.form.formLayoutOptions.labelCol} labelAlign={store.form.formLayoutOptions.labelAlign}>\n                        <Layout.Content style={{overflowY: 'scroll', height: 'calc(100% - 68px)', backgroundColor: 'white' }}>\n                            {store.numPages > 0 && <PageView page={store.form.content.pages[store.currentPage] as Page}></PageView>}\n                        </Layout.Content>\n                        <Layout.Footer style={{padding: '0px', width: '100%', marginTop:'1px'}}>\n                            <div className=\"fl-form-actions fl-shadow-top\">\n                                <Card bordered={false}>\n                                    <Row>\n                                        <Col span={24} style={{ textAlign: 'right' }}>\n                                            { store.currentPage == store.numPages -1 && <Button disabled={Object.keys(store.touched).length == 0 || !store.isValid|| store.isSubmitting } type=\"primary\" style={{ marginLeft: 8 }} htmlType=\"submit\" className=\"action-button\">Submit</Button>}\n                                            { store.currentPage < store.numPages -1 && <Button type=\"primary\" style={{ marginLeft: 8 }} className=\"action-button\" onClick={() => store.nextPage()}><Icon type=\"right\" />Next</Button> }\n                                            { store.currentPage > 0 && store.numPages > 1 && <Button type=\"primary\" className=\"action-button\" onClick={() => store.prevPage()}><Icon type=\"left\" />Prev</Button> }\n                                        </Col>\n                                    </Row>\n                                </Card>\n                            </div>\n                        </Layout.Footer>\n                    </Form>\n                </Layout>\n        </Layout> : <></>\n    });\n}\n"],"sourceRoot":""}