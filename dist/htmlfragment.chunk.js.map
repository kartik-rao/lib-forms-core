{"version":3,"sources":["webpack://Forms/./src/views/controls/HtmlFragmentView.tsx"],"names":["HtmlFragmentView","props","field","allowForms","allowPopups","allowScripts","fragmentUrl","seamless","sandboxProps","push","fallback","rest","src","id","uuid","sandbox","join"],"mappings":";;;;4RAKO,MAAMA,EAA0CC,IACnD,IAAI,MAACC,GAASD,EACV,+BAACE,EAAU,YAAEC,EAAW,aAAEC,EAAY,YAAEC,EAAW,SAAEC,GAAQ,EAAE,2FAC/DC,EAAe,GAInB,OAHIL,GAAaK,EAAaC,KAAK,eAC/BL,GAAcI,EAAaC,KAAK,gBAChCJ,GAAeG,EAAaC,KAAK,iBAC9B,sBAAY,IACR,gBAAC,WAAc,CAACC,SAAS,IAChC,0CAAYC,EAAI,CAAEC,IAAKN,EAAaO,GAAIX,EAAMW,GAAE,YAAaX,EAAMY,KAAMC,QAASP,EAAaQ,KAAK,KAAMT,SAAUA","file":"htmlfragment.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { IHTMLFragmentProps } from '../../models/field.properties';\nimport { IViewProps } from './IViewProps';\nimport { useObserver } from \"mobx-react\";\n\nexport const HtmlFragmentView: React.FC<IViewProps> = (props) => {\n    let {field} = props;\n    let {allowForms, allowPopups, allowScripts, fragmentUrl, seamless, ...rest} = field.componentProps as IHTMLFragmentProps;\n    let sandboxProps = [];\n    if (allowForms) {sandboxProps.push(\"allow-forms\")}\n    if (allowPopups) {sandboxProps.push(\"allow-popups\")}\n    if (allowScripts) {sandboxProps.push(\"allow-scripts\")}\n    return useObserver(() => {\n        return <React.Suspense fallback=\"\">\n        <iframe {...rest} src={fragmentUrl} id={field.id} data-uuid={field.uuid} sandbox={sandboxProps.join(\" \")} seamless={seamless}></iframe>\n    </React.Suspense>\n    });\n};"],"sourceRoot":""}