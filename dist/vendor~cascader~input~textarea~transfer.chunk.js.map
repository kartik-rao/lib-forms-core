{"version":3,"sources":["webpack:///./node_modules/antd/es/_util/resizeObserver.js","webpack:///./node_modules/antd/es/input/TextArea.js","webpack:///./node_modules/antd/es/input/calculateNodeHeight.js","webpack:///./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","ReactResizeObserver","_React$Component","_this","instance","Constructor","TypeError","_classCallCheck","this","apply","arguments","resizeObserver","state","width","height","onResize","entries","_target$getBoundingCl","getBoundingClientRect","fixedWidth","Math","floor","fixedHeight","setState","protoProps","staticProps","subClass","superClass","create","value","_inherits","onComponentUpdated","destroyObserver","disabled","element","observe","disconnect","_this$props$children","children","_extends","assign","source","hasOwnProperty","__rest","s","e","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","TextArea","textareaStyles","resizing","saveTextAreaRef","textArea","textAreaRef","handleTextareaChange","resizeTextarea","onChange","handleKeyDown","_this$props","onPressEnter","onKeyDown","keyCode","resizeOnNextFrame","cancel","nextFrameActionId","autosize","minRows","maxRows","resizeFrameId","renderTextArea","_ref","getPrefixCls","_this$state","_this$props2","customizePrefixCls","prefixCls","className","otherProps","cls","concat","style","overflow","ref","prevProps","focus","blur","hiddenTextarea","HIDDEN_TEXTAREA_STYLE","SIZING_STYLE","computedStyleCache","calculateNodeStyling","node","useCache","undefined","nodeRef","getAttribute","window","getComputedStyle","boxSizing","getPropertyValue","paddingSize","parseFloat","borderSize","nodeInfo","sizingStyle","map","name","join","calculateNodeHeight","uiTextNode","document","createElement","body","appendChild","setAttribute","removeAttribute","_calculateNodeStyling","placeholder","overflowY","minHeight","Number","MIN_SAFE_INTEGER","maxHeight","MAX_SAFE_INTEGER","scrollHeight","singleRowHeight","max","min","MapShim","Map","getIndex","arr","result","some","entry","index","class_1","__entries__","get","set","push","delete","splice","has","clear","forEach","callback","ctx","_i","_a","isBrowser","global$1","global","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","attributes","childList","characterData","subtree","removeEventListener","_b","propertyName","getInstance","instance_","defineConfigurable","keys","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","getBordersSize","styles","positions","reduce","size","position","getHTMLElementContentRect","clientWidth","clientHeight","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","observation","WeakMap","ResizeObserver","method"],"mappings":";;;;6DAAA,sLAASA,EAAQC,GAAwT,OAAtOD,EAArD,mBAAXE,QAAoD,iBAApBA,OAAOC,SAAmC,SAAiBF,GAAO,cAAcA,GAA2B,SAAiBA,GAAO,OAAOA,GAAyB,mBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,IAAyBA,GAIxV,SAASK,EAAkBC,EAAQC,GAAS,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,IAAIE,EAAaH,EAAMC,GAAIE,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAI7S,SAASO,EAA2BC,EAAMC,GAAQ,OAAIA,GAA2B,WAAlBpB,EAAQoB,IAAsC,mBAATA,EAEpG,SAAgCD,GAAQ,QAAa,IAATA,EAAmB,MAAM,IAAIE,eAAe,6DAAgE,OAAOF,EAFbG,CAAuBH,GAAtCC,EAInI,SAASG,EAAgBC,GAAwJ,OAAnJD,EAAkBR,OAAOU,eAAiBV,OAAOW,eAAiB,SAAyBF,GAAK,OAAOA,EAAEG,WAAaZ,OAAOW,eAAeF,KAA8BA,GAIxM,SAASI,EAAgBJ,EAAGK,GAA+G,OAA1GD,EAAkBb,OAAOU,gBAAkB,SAAyBD,EAAGK,GAAsB,OAAjBL,EAAEG,UAAYE,EAAUL,IAA6BA,EAAGK,GAMrK,IAAIC,EAEJ,SAAUC,GAGR,SAASD,IACP,IAAIE,EAwCJ,OAlEJ,SAAyBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCA4B5GC,CAAgBC,KAAMP,IAEtBE,EAAQd,EAA2BmB,KAAMd,EAAgBO,GAAqBQ,MAAMD,KAAME,aACpFC,eAAiB,KACvBR,EAAMS,MAAQ,CACZC,MAAO,EACPC,OAAQ,GAGVX,EAAMY,SAAW,SAAUC,GACzB,IAAID,EAAWZ,EAAMxB,MAAMoC,SAGvBE,EAFSD,EAAQ,GAAGtC,OAEWwC,wBAC/BL,EAAQI,EAAsBJ,MAC9BC,EAASG,EAAsBH,OAQ/BK,EAAaC,KAAKC,MAAMR,GACxBS,EAAcF,KAAKC,MAAMP,GAEzBX,EAAMS,MAAMC,QAAUM,GAAchB,EAAMS,MAAME,SAAWQ,IAC7DnB,EAAMoB,SAAS,CACbV,MAAOM,EACPL,OAAQQ,IAGNP,GACFA,MAKCZ,EA9DX,IAAsBE,EAAamB,EAAYC,EAgH7C,OAxGF,SAAmBC,EAAUC,GAAc,GAA0B,mBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAIrB,UAAU,sDAAyDoB,EAASlD,UAAYU,OAAO0C,OAAOD,GAAcA,EAAWnD,UAAW,CAAED,YAAa,CAAEsD,MAAOH,EAAUzC,UAAU,EAAMD,cAAc,KAAe2C,GAAY5B,EAAgB2B,EAAUC,GAWjXG,CAAU7B,EA8FV,gBAjHoBI,EAiEPJ,GAjEoBuB,EAiEC,CAAC,CACjCpC,IAAK,oBACLyC,MAAO,WACLrB,KAAKuB,uBAEN,CACD3C,IAAK,qBACLyC,MAAO,WACLrB,KAAKuB,uBAEN,CACD3C,IAAK,uBACLyC,MAAO,WACLrB,KAAKwB,oBAEN,CACD5C,IAAK,qBACLyC,MAAO,WACL,IAAII,EAAWzB,KAAK7B,MAAMsD,SACtBC,EAAU,sBAAY1B,MAErBA,KAAKG,gBAAmBsB,IAAYC,EAI9BD,GAETzB,KAAKwB,mBAJLxB,KAAKG,eAAiB,IAAI,UAAeH,KAAKO,UAC9CP,KAAKG,eAAewB,QAAQD,MAM/B,CACD9C,IAAK,kBACLyC,MAAO,WACDrB,KAAKG,iBACPH,KAAKG,eAAeyB,aACpB5B,KAAKG,eAAiB,QAGzB,CACDvB,IAAK,SACLyC,MAAO,WACL,IAAIQ,EAAuB7B,KAAK7B,MAAM2D,SAEtC,YADwC,IAAzBD,EAAkC,KAAOA,OA3GgB5D,EAAkB4B,EAAY7B,UAAWgD,GAAiBC,GAAahD,EAAkB4B,EAAaoB,GAgH3KxB,EA9FT,GAiGe,a;;;;6DCzHf,4kBAAS9B,EAAQC,GAAwT,OAAtOD,EAArD,mBAAXE,QAAoD,iBAApBA,OAAOC,SAAmC,SAAiBF,GAAO,cAAcA,GAA2B,SAAiBA,GAAO,OAAOA,GAAyB,mBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,IAAyBA,GAExV,SAASmE,IAA2Q,OAA9PA,EAAWrD,OAAOsD,QAAU,SAAU9D,GAAU,IAAK,IAAIE,EAAI,EAAGA,EAAI8B,UAAU7B,OAAQD,IAAK,CAAE,IAAI6D,EAAS/B,UAAU9B,GAAI,IAAK,IAAIQ,KAAOqD,EAAcvD,OAAOV,UAAUkE,eAAenD,KAAKkD,EAAQrD,KAAQV,EAAOU,GAAOqD,EAAOrD,IAAY,OAAOV,IAA2B+B,MAAMD,KAAME,WAMhT,SAASjC,EAAkBC,EAAQC,GAAS,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,IAAIE,EAAaH,EAAMC,GAAIE,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAI7S,SAASO,EAA2BC,EAAMC,GAAQ,OAAIA,GAA2B,WAAlBpB,EAAQoB,IAAsC,mBAATA,EAEpG,SAAgCD,GAAQ,QAAa,IAATA,EAAmB,MAAM,IAAIE,eAAe,6DAAgE,OAAOF,EAFbG,CAAuBH,GAAtCC,EAInI,SAASG,EAAgBC,GAAwJ,OAAnJD,EAAkBR,OAAOU,eAAiBV,OAAOW,eAAiB,SAAyBF,GAAK,OAAOA,EAAEG,WAAaZ,OAAOW,eAAeF,KAA8BA,GAIxM,SAASI,EAAgBJ,EAAGK,GAA+G,OAA1GD,EAAkBb,OAAOU,gBAAkB,SAAyBD,EAAGK,GAAsB,OAAjBL,EAAEG,UAAYE,EAAUL,IAA6BA,EAAGK,GAErK,IAAI2C,EAAgC,SAAUC,EAAGC,GAC/C,IAAIC,EAAI,GAER,IAAK,IAAI9C,KAAK4C,EACR1D,OAAOV,UAAUkE,eAAenD,KAAKqD,EAAG5C,IAAM6C,EAAEE,QAAQ/C,GAAK,IAAG8C,EAAE9C,GAAK4C,EAAE5C,IAG/E,GAAS,MAAL4C,GAAqD,mBAAjC1D,OAAO8D,sBAA2C,KAAIpE,EAAI,EAAb,IAAgBoB,EAAId,OAAO8D,sBAAsBJ,GAAIhE,EAAIoB,EAAEnB,OAAQD,IAClIiE,EAAEE,QAAQ/C,EAAEpB,IAAM,GAAKM,OAAOV,UAAUyE,qBAAqB1D,KAAKqD,EAAG5C,EAAEpB,MAAKkE,EAAE9C,EAAEpB,IAAMgE,EAAE5C,EAAEpB,KAEhG,OAAOkE,GAYLI,EAEJ,SAAUhD,GAGR,SAASgD,IACP,IAAI/C,EA4GJ,OAxJJ,SAAyBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCA8C5GC,CAAgBC,KAAM0C,IAEtB/C,EAAQd,EAA2BmB,KAAMd,EAAgBwD,GAAUzC,MAAMD,KAAME,aACzEE,MAAQ,CACZuC,eAAgB,GAChBC,UAAU,GAGZjD,EAAMkD,gBAAkB,SAAUC,GAChCnD,EAAMoD,YAAcD,GAGtBnD,EAAMqD,qBAAuB,SAAUX,GAC/B,UAAW1C,EAAMxB,OACrBwB,EAAMsD,iBAGR,IAAIC,EAAWvD,EAAMxB,MAAM+E,SAEvBA,GACFA,EAASb,IAIb1C,EAAMwD,cAAgB,SAAUd,GAC9B,IAAIe,EAAczD,EAAMxB,MACpBkF,EAAeD,EAAYC,aAC3BC,EAAYF,EAAYE,UAEV,KAAdjB,EAAEkB,SAAkBF,GACtBA,EAAahB,GAGXiB,GACFA,EAAUjB,IAId1C,EAAM6D,kBAAoB,WACxB,UAAIC,OAAO9D,EAAM+D,mBACjB/D,EAAM+D,kBAAoB,kBAAI/D,EAAMsD,iBAGtCtD,EAAMsD,eAAiB,WACrB,IAAIU,EAAWhE,EAAMxB,MAAMwF,SAE3B,GAAKA,GAAahE,EAAMoD,YAAxB,CAIA,IAAIa,EAAUD,EAASC,QACnBC,EAAUF,EAASE,QACnBlB,EAAiB,kBAAoBhD,EAAMoD,aAAa,EAAOa,EAASC,GAE5ElE,EAAMoB,SAAS,CACb4B,eAAgBA,EAChBC,UAAU,GACT,WACD,UAAIa,OAAO9D,EAAMmE,eACjBnE,EAAMmE,cAAgB,kBAAI,WACxBnE,EAAMoB,SAAS,CACb6B,UAAU,UAMlBjD,EAAMoE,eAAiB,SAAUC,GAC/B,IApHmBpG,EAAKgB,EAAKyC,EAoHzB4C,EAAeD,EAAKC,aACpBC,EAAcvE,EAAMS,MACpBuC,EAAiBuB,EAAYvB,eAC7BC,EAAWsB,EAAYtB,SACvBuB,EAAexE,EAAMxB,MACrBiG,EAAqBD,EAAaE,UAClCC,EAAYH,EAAaG,UACzB7C,EAAW0C,EAAa1C,SACxBkC,EAAWQ,EAAaR,SAExBxF,EAAQgE,EAAOxC,EAAMxB,MAAO,IAE5BoG,EAAa,kBAAKpG,EAAO,CAAC,YAAa,eAAgB,aACvDkG,EAAYJ,EAAa,QAASG,GAClCI,EAAM,IAAWH,EAAWC,GAlIb1G,EAkIwC,GAlInCgB,EAkIuC,GAAG6F,OAAOJ,EAAW,aAlIvDhD,EAkIqEI,EAlIxD7C,KAAOhB,EAAOc,OAAOC,eAAef,EAAKgB,EAAK,CAAEyC,MAAOA,EAAO9C,YAAY,EAAMC,cAAc,EAAMC,UAAU,IAAkBb,EAAIgB,GAAOyC,EAAgBzD,IAoIjM8G,EAAQ3C,EAAS,GAAI5D,EAAMuG,MAAO/B,EAAgBC,EAAW,CAC/D+B,SAAU,UACR,MAQJ,MAJI,UAAWJ,IACbA,EAAWlD,MAAQkD,EAAWlD,OAAS,IAGlC,gBAAoB,UAAgB,CACzCd,SAAUZ,EAAM6D,kBAChB/B,UAAWkC,GACV,gBAAoB,WAAY5B,EAAS,GAAIwC,EAAY,CAC1DD,UAAWE,EACXE,MAAOA,EACPpB,UAAW3D,EAAMwD,cACjBD,SAAUvD,EAAMqD,qBAChB4B,IAAKjF,EAAMkD,qBAIRlD,EApJX,IAAsBE,EAAamB,EAAYC,EA2L7C,OAnLF,SAAmBC,EAAUC,GAAc,GAA0B,mBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAIrB,UAAU,sDAAyDoB,EAASlD,UAAYU,OAAO0C,OAAOD,GAAcA,EAAWnD,UAAW,CAAED,YAAa,CAAEsD,MAAOH,EAAUzC,UAAU,EAAMD,cAAc,KAAe2C,GAAY5B,EAAgB2B,EAAUC,GA6BjXG,CAAUoB,EAuJV,gBA5LoB7C,EAuJP6C,GAvJoB1B,EAuJV,CAAC,CACtBpC,IAAK,oBACLyC,MAAO,WACLrB,KAAKiD,mBAEN,CACDrE,IAAK,qBACLyC,MAAO,SAA4BwD,GAE7BA,EAAUxD,QAAUrB,KAAK7B,MAAMkD,OACjCrB,KAAKiD,mBAGR,CACDrE,IAAK,uBACLyC,MAAO,WACL,UAAIoC,OAAOzD,KAAK0D,mBAChB,UAAID,OAAOzD,KAAK8D,iBAEjB,CACDlF,IAAK,QACLyC,MAAO,WACLrB,KAAK+C,YAAY+B,UAElB,CACDlG,IAAK,OACLyC,MAAO,WACLrB,KAAK+C,YAAYgC,SAElB,CACDnG,IAAK,SACLyC,MAAO,WACL,OAAO,gBAAoB,iBAAgB,KAAMrB,KAAK+D,qBAvLkB9F,EAAkB4B,EAAY7B,UAAWgD,GAAiBC,GAAahD,EAAkB4B,EAAaoB,GA2L3KyB,EAvJT,GA0JA,mBAASA,GACM,a;;;;mFCzMf,gGAKA,IAGIsC,EAHAC,EAAwB,iQACxBC,EAAe,CAAC,iBAAkB,cAAe,cAAe,iBAAkB,cAAe,cAAe,YAAa,eAAgB,iBAAkB,iBAAkB,QAAS,cAAe,eAAgB,gBAAiB,eAAgB,cAC1PC,EAAqB,GAElB,SAASC,EAAqBC,GACnC,IAAIC,EAAWpF,UAAU7B,OAAS,QAAsBkH,IAAjBrF,UAAU,IAAmBA,UAAU,GAC1EsF,EAAUH,EAAKI,aAAa,OAASJ,EAAKI,aAAa,iBAAmBJ,EAAKI,aAAa,QAEhG,GAAIH,GAAYH,EAAmBK,GACjC,OAAOL,EAAmBK,GAG5B,IAAId,EAAQgB,OAAOC,iBAAiBN,GAChCO,EAAYlB,EAAMmB,iBAAiB,eAAiBnB,EAAMmB,iBAAiB,oBAAsBnB,EAAMmB,iBAAiB,sBACxHC,EAAcC,WAAWrB,EAAMmB,iBAAiB,mBAAqBE,WAAWrB,EAAMmB,iBAAiB,gBACvGG,EAAaD,WAAWrB,EAAMmB,iBAAiB,wBAA0BE,WAAWrB,EAAMmB,iBAAiB,qBAI3GI,EAAW,CACbC,YAJgBhB,EAAaiB,IAAI,SAAUC,GAC3C,MAAO,GAAG3B,OAAO2B,EAAM,KAAK3B,OAAOC,EAAMmB,iBAAiBO,MACzDC,KAAK,KAGNP,YAAaA,EACbE,WAAYA,EACZJ,UAAWA,GAOb,OAJIN,GAAYE,IACdL,EAAmBK,GAAWS,GAGzBA,EAEM,SAASK,EAAoBC,GAC1C,IAAIjB,EAAWpF,UAAU7B,OAAS,QAAsBkH,IAAjBrF,UAAU,IAAmBA,UAAU,GAC1E0D,EAAU1D,UAAU7B,OAAS,QAAsBkH,IAAjBrF,UAAU,GAAmBA,UAAU,GAAK,KAC9E2D,EAAU3D,UAAU7B,OAAS,QAAsBkH,IAAjBrF,UAAU,GAAmBA,UAAU,GAAK,KAE7E8E,IACHA,EAAiBwB,SAASC,cAAc,YACxCD,SAASE,KAAKC,YAAY3B,IAKxBuB,EAAWd,aAAa,QAC1BT,EAAe4B,aAAa,OAAQL,EAAWd,aAAa,SAE5DT,EAAe6B,gBAAgB,QAKjC,IAAIC,EAAwB1B,EAAqBmB,EAAYjB,GACzDQ,EAAcgB,EAAsBhB,YACpCE,EAAac,EAAsBd,WACnCJ,EAAYkB,EAAsBlB,UAClCM,EAAcY,EAAsBZ,YAKxClB,EAAe4B,aAAa,QAAS,GAAGnC,OAAOyB,EAAa,KAAKzB,OAAOQ,IACxED,EAAe3D,MAAQkF,EAAWlF,OAASkF,EAAWQ,aAAe,GACrE,IAGIC,EAHAC,EAAYC,OAAOC,iBACnBC,EAAYF,OAAOG,iBACnB/G,EAAS0E,EAAesC,aAW5B,GARkB,eAAd1B,EAEFtF,GAAU0F,EACa,gBAAdJ,IAETtF,GAAUwF,GAGI,OAAZlC,GAAgC,OAAZC,EAAkB,CAExCmB,EAAe3D,MAAQ,IACvB,IAAIkG,EAAkBvC,EAAesC,aAAexB,EAEpC,OAAZlC,IACFqD,EAAYM,EAAkB3D,EAEZ,eAAdgC,IACFqB,EAAYA,EAAYnB,EAAcE,GAGxC1F,EAASM,KAAK4G,IAAIP,EAAW3G,IAGf,OAAZuD,IACFuD,EAAYG,EAAkB1D,EAEZ,eAAd+B,IACFwB,EAAYA,EAAYtB,EAAcE,GAGxCgB,EAAY1G,EAAS8G,EAAY,GAAK,SACtC9G,EAASM,KAAK6G,IAAIL,EAAW9G,IAIjC,MAAO,CACLA,OAAQA,EACR2G,UAAWA,EACXG,UAAWA,EACXJ,UAAWA,K;;;;6DChHf,mBAOA,IAAIU,EAAU,WACV,GAAmB,oBAARC,IACP,OAAOA,IASX,SAASC,EAASC,EAAKjJ,GACnB,IAAIkJ,GAAU,EAQd,OAPAD,EAAIE,KAAK,SAAUC,EAAOC,GACtB,OAAID,EAAM,KAAOpJ,IACbkJ,EAASG,GACF,KAIRH,EAEX,OAAsB,WAClB,SAASI,IACLlI,KAAKmI,YAAc,GAuEvB,OArEAzJ,OAAOC,eAAeuJ,EAAQlK,UAAW,OAAQ,CAI7CoK,IAAK,WACD,OAAOpI,KAAKmI,YAAY9J,QAE5BE,YAAY,EACZC,cAAc,IAMlB0J,EAAQlK,UAAUoK,IAAM,SAAUxJ,GAC9B,IAAIqJ,EAAQL,EAAS5H,KAAKmI,YAAavJ,GACnCoJ,EAAQhI,KAAKmI,YAAYF,GAC7B,OAAOD,GAASA,EAAM,IAO1BE,EAAQlK,UAAUqK,IAAM,SAAUzJ,EAAKyC,GACnC,IAAI4G,EAAQL,EAAS5H,KAAKmI,YAAavJ,IAClCqJ,EACDjI,KAAKmI,YAAYF,GAAO,GAAK5G,EAG7BrB,KAAKmI,YAAYG,KAAK,CAAC1J,EAAKyC,KAOpC6G,EAAQlK,UAAUuK,OAAS,SAAU3J,GACjC,IAAI4B,EAAUR,KAAKmI,YACfF,EAAQL,EAASpH,EAAS5B,IACzBqJ,GACDzH,EAAQgI,OAAOP,EAAO,IAO9BC,EAAQlK,UAAUyK,IAAM,SAAU7J,GAC9B,SAAUgJ,EAAS5H,KAAKmI,YAAavJ,IAKzCsJ,EAAQlK,UAAU0K,MAAQ,WACtB1I,KAAKmI,YAAYK,OAAO,IAO5BN,EAAQlK,UAAU2K,QAAU,SAAUC,EAAUC,QAChC,IAARA,IAAkBA,EAAM,MAC5B,IAAK,IAAIC,EAAK,EAAGC,EAAK/I,KAAKmI,YAAaW,EAAKC,EAAG1K,OAAQyK,IAAM,CAC1D,IAAId,EAAQe,EAAGD,GACfF,EAAS7J,KAAK8J,EAAKb,EAAM,GAAIA,EAAM,MAGpCE,EAzEU,GAtBX,GAsGVc,EAA8B,oBAAXtD,QAA8C,oBAAbc,UAA4Bd,OAAOc,WAAaA,SAGpGyC,OACsB,IAAXC,GAA0BA,EAAOtI,OAASA,KAC1CsI,EAES,oBAATpK,MAAwBA,KAAK8B,OAASA,KACtC9B,KAEW,oBAAX4G,QAA0BA,OAAO9E,OAASA,KAC1C8E,OAGJyD,SAAS,cAATA,GASPC,EACqC,mBAA1BC,sBAIAA,sBAAsBC,KAAKL,GAE/B,SAAUL,GAAY,OAAOW,WAAW,WAAc,OAAOX,EAASY,KAAKC,QAAW,IAAO,KAIpGC,EAAkB,EAiEtB,IAAIC,EAAgB,GAGhBC,EAAiB,CAAC,MAAO,QAAS,SAAU,OAAQ,QAAS,SAAU,OAAQ,UAE/EC,EAAwD,oBAArBC,iBAInCC,EAA0C,WAM1C,SAASA,IAML/J,KAAKgK,YAAa,EAMlBhK,KAAKiK,sBAAuB,EAM5BjK,KAAKkK,mBAAqB,KAM1BlK,KAAKmK,WAAa,GAClBnK,KAAKoK,iBAAmBpK,KAAKoK,iBAAiBd,KAAKtJ,MACnDA,KAAKqK,QAjGb,SAAmBzB,EAAU0B,GACzB,IAAIC,GAAc,EAAOC,GAAe,EAAOC,EAAe,EAO9D,SAASC,IACDH,IACAA,GAAc,EACd3B,KAEA4B,GACAG,IAUR,SAASC,IACLxB,EAAwBsB,GAO5B,SAASC,IACL,IAAIE,EAAYrB,KAAKC,MACrB,GAAIc,EAAa,CAEb,GAAIM,EAAYJ,EAAef,EAC3B,OAMJc,GAAe,OAGfD,GAAc,EACdC,GAAe,EACfjB,WAAWqB,EAAiBN,GAEhCG,EAAeI,EAEnB,OAAOF,EA6CYG,CAAS9K,KAAKqK,QAAQf,KAAKtJ,MAAO2J,GAgKrD,OAxJAI,EAAyB/L,UAAU+M,YAAc,SAAUC,IACjDhL,KAAKmK,WAAW5H,QAAQyI,IAC1BhL,KAAKmK,WAAW7B,KAAK0C,GAGpBhL,KAAKgK,YACNhK,KAAKiL,YASblB,EAAyB/L,UAAUkN,eAAiB,SAAUF,GAC1D,IAAIG,EAAYnL,KAAKmK,WACjBlC,EAAQkD,EAAU5I,QAAQyI,IAEzB/C,GACDkD,EAAU3C,OAAOP,EAAO,IAGvBkD,EAAU9M,QAAU2B,KAAKgK,YAC1BhK,KAAKoL,eASbrB,EAAyB/L,UAAUqM,QAAU,WACnBrK,KAAKqL,oBAIvBrL,KAAKqK,WAWbN,EAAyB/L,UAAUqN,iBAAmB,WAElD,IAAIC,EAAkBtL,KAAKmK,WAAWoB,OAAO,SAAUP,GACnD,OAAOA,EAASQ,eAAgBR,EAASS,cAQ7C,OADAH,EAAgB3C,QAAQ,SAAUqC,GAAY,OAAOA,EAASU,oBACvDJ,EAAgBjN,OAAS,GAQpC0L,EAAyB/L,UAAUiN,SAAW,WAGrCjC,IAAahJ,KAAKgK,aAMvBxD,SAASmF,iBAAiB,gBAAiB3L,KAAKoK,kBAChD1E,OAAOiG,iBAAiB,SAAU3L,KAAKqK,SACnCR,GACA7J,KAAKkK,mBAAqB,IAAIJ,iBAAiB9J,KAAKqK,SACpDrK,KAAKkK,mBAAmBvI,QAAQ6E,SAAU,CACtCoF,YAAY,EACZC,WAAW,EACXC,eAAe,EACfC,SAAS,MAIbvF,SAASmF,iBAAiB,qBAAsB3L,KAAKqK,SACrDrK,KAAKiK,sBAAuB,GAEhCjK,KAAKgK,YAAa,IAQtBD,EAAyB/L,UAAUoN,YAAc,WAGxCpC,GAAchJ,KAAKgK,aAGxBxD,SAASwF,oBAAoB,gBAAiBhM,KAAKoK,kBACnD1E,OAAOsG,oBAAoB,SAAUhM,KAAKqK,SACtCrK,KAAKkK,oBACLlK,KAAKkK,mBAAmBtI,aAExB5B,KAAKiK,sBACLzD,SAASwF,oBAAoB,qBAAsBhM,KAAKqK,SAE5DrK,KAAKkK,mBAAqB,KAC1BlK,KAAKiK,sBAAuB,EAC5BjK,KAAKgK,YAAa,IAStBD,EAAyB/L,UAAUoM,iBAAmB,SAAUrB,GAC5D,IAAIkD,EAAKlD,EAAGmD,aAAcA,OAAsB,IAAPD,EAAgB,GAAKA,EAEvCrC,EAAe7B,KAAK,SAAUnJ,GACjD,SAAUsN,EAAa3J,QAAQ3D,MAG/BoB,KAAKqK,WAQbN,EAAyBoC,YAAc,WAInC,OAHKnM,KAAKoM,YACNpM,KAAKoM,UAAY,IAAIrC,GAElB/J,KAAKoM,WAOhBrC,EAAyBqC,UAAY,KAC9BrC,EAhMkC,GA0MzCsC,EAAqB,SAAWnO,EAAQC,GACxC,IAAK,IAAI2K,EAAK,EAAGC,EAAKrK,OAAO4N,KAAKnO,GAAQ2K,EAAKC,EAAG1K,OAAQyK,IAAM,CAC5D,IAAIlK,EAAMmK,EAAGD,GACbpK,OAAOC,eAAeT,EAAQU,EAAK,CAC/ByC,MAAOlD,EAAMS,GACbL,YAAY,EACZE,UAAU,EACVD,cAAc,IAGtB,OAAON,GASPqO,EAAc,SAAWrO,GAOzB,OAHkBA,GAAUA,EAAOsO,eAAiBtO,EAAOsO,cAAcC,aAGnDxD,GAItByD,EAAYC,EAAe,EAAG,EAAG,EAAG,GAOxC,SAASC,EAAQvL,GACb,OAAO0E,WAAW1E,IAAU,EAShC,SAASwL,EAAeC,GAEpB,IADA,IAAIC,EAAY,GACPjE,EAAK,EAAGA,EAAK5I,UAAU7B,OAAQyK,IACpCiE,EAAUjE,EAAK,GAAK5I,UAAU4I,GAElC,OAAOiE,EAAUC,OAAO,SAAUC,EAAMC,GAEpC,OAAOD,EAAOL,EADFE,EAAO,UAAYI,EAAW,YAE3C,GAmCP,SAASC,EAA0BjP,GAG/B,IAAIkP,EAAclP,EAAOkP,YAAaC,EAAenP,EAAOmP,aAS5D,IAAKD,IAAgBC,EACjB,OAAOX,EAEX,IAAII,EAASP,EAAYrO,GAAQyH,iBAAiBzH,GAC9CoP,EA3CR,SAAqBR,GAGjB,IAFA,IACIQ,EAAW,GACNxE,EAAK,EAAGyE,EAFD,CAAC,MAAO,QAAS,SAAU,QAEDzE,EAAKyE,EAAYlP,OAAQyK,IAAM,CACrE,IAAIoE,EAAWK,EAAYzE,GACvBzH,EAAQyL,EAAO,WAAaI,GAChCI,EAASJ,GAAYN,EAAQvL,GAEjC,OAAOiM,EAmCQE,CAAYV,GACvBW,EAAWH,EAASI,KAAOJ,EAASK,MACpCC,EAAUN,EAASO,IAAMP,EAASQ,OAKlCzN,EAAQuM,EAAQE,EAAOzM,OAAQC,EAASsM,EAAQE,EAAOxM,QAqB3D,GAlByB,eAArBwM,EAAOlH,YAOHhF,KAAKmN,MAAM1N,EAAQoN,KAAcL,IACjC/M,GAASwM,EAAeC,EAAQ,OAAQ,SAAWW,GAEnD7M,KAAKmN,MAAMzN,EAASsN,KAAaP,IACjC/M,GAAUuM,EAAeC,EAAQ,MAAO,UAAYc,KAoDhE,SAA2B1P,GACvB,OAAOA,IAAWqO,EAAYrO,GAAQsI,SAASwH,gBA9C1CC,CAAkB/P,GAAS,CAK5B,IAAIgQ,EAAgBtN,KAAKmN,MAAM1N,EAAQoN,GAAYL,EAC/Ce,EAAiBvN,KAAKmN,MAAMzN,EAASsN,GAAWP,EAMpB,IAA5BzM,KAAKwN,IAAIF,KACT7N,GAAS6N,GAEoB,IAA7BtN,KAAKwN,IAAID,KACT7N,GAAU6N,GAGlB,OAAOxB,EAAeW,EAASI,KAAMJ,EAASO,IAAKxN,EAAOC,GAQ9D,IAAI+N,EAGkC,oBAAvBC,mBACA,SAAUpQ,GAAU,OAAOA,aAAkBqO,EAAYrO,GAAQoQ,oBAKrE,SAAUpQ,GAAU,OAAQA,aAAkBqO,EAAYrO,GAAQqQ,YAC3C,mBAAnBrQ,EAAOsQ,SAiBtB,SAASC,EAAevQ,GACpB,OAAK8K,EAGDqF,EAAqBnQ,GAhH7B,SAA2BA,GACvB,IAAIwQ,EAAOxQ,EAAOsQ,UAClB,OAAO7B,EAAe,EAAG,EAAG+B,EAAKrO,MAAOqO,EAAKpO,QA+GlCqO,CAAkBzQ,GAEtBiP,EAA0BjP,GALtBwO,EAuCf,SAASC,EAAeiC,EAAGC,EAAGxO,EAAOC,GACjC,MAAO,CAAEsO,EAAGA,EAAGC,EAAGA,EAAGxO,MAAOA,EAAOC,OAAQA,GAO/C,IAAIwO,EAAmC,WAMnC,SAASA,EAAkB5Q,GAMvB8B,KAAK+O,eAAiB,EAMtB/O,KAAKgP,gBAAkB,EAMvBhP,KAAKiP,aAAetC,EAAe,EAAG,EAAG,EAAG,GAC5C3M,KAAK9B,OAASA,EA0BlB,OAlBA4Q,EAAkB9Q,UAAUkR,SAAW,WACnC,IAAIC,EAAOV,EAAezO,KAAK9B,QAE/B,OADA8B,KAAKiP,aAAeE,EACZA,EAAK9O,QAAUL,KAAK+O,gBACxBI,EAAK7O,SAAWN,KAAKgP,iBAQ7BF,EAAkB9Q,UAAUoR,cAAgB,WACxC,IAAID,EAAOnP,KAAKiP,aAGhB,OAFAjP,KAAK+O,eAAiBI,EAAK9O,MAC3BL,KAAKgP,gBAAkBG,EAAK7O,OACrB6O,GAEJL,EAnD2B,GAsDlCO,EAOA,SAA6BnR,EAAQoR,GACjC,IA/FoBvG,EACpB6F,EAAUC,EAAUxO,EAAkBC,EAEtCiP,EACAJ,EA2FIK,GA9FJZ,GADoB7F,EA+FiBuG,GA9F9BV,EAAGC,EAAI9F,EAAG8F,EAAGxO,EAAQ0I,EAAG1I,MAAOC,EAASyI,EAAGzI,OAElDiP,EAAoC,oBAApBE,gBAAkCA,gBAAkB/Q,OACpEyQ,EAAOzQ,OAAO0C,OAAOmO,EAAOvR,WAEhCqO,EAAmB8C,EAAM,CACrBP,EAAGA,EAAGC,EAAGA,EAAGxO,MAAOA,EAAOC,OAAQA,EAClCuN,IAAKgB,EACLlB,MAAOiB,EAAIvO,EACXyN,OAAQxN,EAASuO,EACjBnB,KAAMkB,IAEHO,GAyFH9C,EAAmBrM,KAAM,CAAE9B,OAAQA,EAAQsR,YAAaA,KAK5DE,EAAmC,WAWnC,SAASA,EAAkB9G,EAAU+G,EAAYC,GAc7C,GAPA5P,KAAK6P,oBAAsB,GAM3B7P,KAAK8P,cAAgB,IAAIpI,EACD,mBAAbkB,EACP,MAAM,IAAI9I,UAAU,2DAExBE,KAAK+P,UAAYnH,EACjB5I,KAAKgQ,YAAcL,EACnB3P,KAAKiQ,aAAeL,EAoHxB,OA5GAF,EAAkB1R,UAAU2D,QAAU,SAAUzD,GAC5C,IAAKgC,UAAU7B,OACX,MAAM,IAAIyB,UAAU,4CAGxB,GAAuB,oBAAZoQ,SAA6BA,mBAAmBxR,OAA3D,CAGA,KAAMR,aAAkBqO,EAAYrO,GAAQgS,SACxC,MAAM,IAAIpQ,UAAU,yCAExB,IAAIqQ,EAAenQ,KAAK8P,cAEpBK,EAAa1H,IAAIvK,KAGrBiS,EAAa9H,IAAInK,EAAQ,IAAI4Q,EAAkB5Q,IAC/C8B,KAAKgQ,YAAYjF,YAAY/K,MAE7BA,KAAKgQ,YAAY3F,aAQrBqF,EAAkB1R,UAAUoS,UAAY,SAAUlS,GAC9C,IAAKgC,UAAU7B,OACX,MAAM,IAAIyB,UAAU,4CAGxB,GAAuB,oBAAZoQ,SAA6BA,mBAAmBxR,OAA3D,CAGA,KAAMR,aAAkBqO,EAAYrO,GAAQgS,SACxC,MAAM,IAAIpQ,UAAU,yCAExB,IAAIqQ,EAAenQ,KAAK8P,cAEnBK,EAAa1H,IAAIvK,KAGtBiS,EAAa5H,OAAOrK,GACfiS,EAAalD,MACdjN,KAAKgQ,YAAY9E,eAAelL,SAQxC0P,EAAkB1R,UAAU4D,WAAa,WACrC5B,KAAKqQ,cACLrQ,KAAK8P,cAAcpH,QACnB1I,KAAKgQ,YAAY9E,eAAelL,OAQpC0P,EAAkB1R,UAAUwN,aAAe,WACvC,IAAI7L,EAAQK,KACZA,KAAKqQ,cACLrQ,KAAK8P,cAAcnH,QAAQ,SAAU2H,GAC7BA,EAAYpB,YACZvP,EAAMkQ,oBAAoBvH,KAAKgI,MAU3CZ,EAAkB1R,UAAU0N,gBAAkB,WAE1C,GAAK1L,KAAKyL,YAAV,CAGA,IAAI5C,EAAM7I,KAAKiQ,aAEXzP,EAAUR,KAAK6P,oBAAoB1J,IAAI,SAAUmK,GACjD,OAAO,IAAIjB,EAAoBiB,EAAYpS,OAAQoS,EAAYlB,mBAEnEpP,KAAK+P,UAAUhR,KAAK8J,EAAKrI,EAASqI,GAClC7I,KAAKqQ,gBAOTX,EAAkB1R,UAAUqS,YAAc,WACtCrQ,KAAK6P,oBAAoBrH,OAAO,IAOpCkH,EAAkB1R,UAAUyN,UAAY,WACpC,OAAOzL,KAAK6P,oBAAoBxR,OAAS,GAEtCqR,EAlJ2B,GAwJlCvE,EAA+B,oBAAZoF,QAA0B,IAAIA,QAAY,IAAI7I,EAKjE8I,EAOA,SAASA,EAAe5H,GACpB,KAAM5I,gBAAgBwQ,GAClB,MAAM,IAAI1Q,UAAU,sCAExB,IAAKI,UAAU7B,OACX,MAAM,IAAIyB,UAAU,4CAExB,IAAI6P,EAAa5F,EAAyBoC,cACtCnB,EAAW,IAAI0E,EAAkB9G,EAAU+G,EAAY3P,MAC3DmL,EAAU9C,IAAIrI,KAAMgL,IAK5B,CACI,UACA,YACA,cACFrC,QAAQ,SAAU8H,GAChBD,EAAexS,UAAUyS,GAAU,WAC/B,IAAI1H,EACJ,OAAQA,EAAKoC,EAAU/C,IAAIpI,OAAOyQ,GAAQxQ,MAAM8I,EAAI7I,cAI5D,IAAI+H,OAEuC,IAA5BgB,EAASuH,eACTvH,EAASuH,eAEbA,EAGI,a","file":"vendor~cascader~input~textarea~transfer.chunk.js","sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nvar ReactResizeObserver =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReactResizeObserver, _React$Component);\n\n  function ReactResizeObserver() {\n    var _this;\n\n    _classCallCheck(this, ReactResizeObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactResizeObserver).apply(this, arguments));\n    _this.resizeObserver = null;\n    _this.state = {\n      width: 0,\n      height: 0\n    };\n\n    _this.onResize = function (entries) {\n      var onResize = _this.props.onResize;\n      var target = entries[0].target;\n\n      var _target$getBoundingCl = target.getBoundingClientRect(),\n          width = _target$getBoundingCl.width,\n          height = _target$getBoundingCl.height;\n      /**\n       * Resize observer trigger when content size changed.\n       * In most case we just care about element size,\n       * let's use `boundary` instead of `contentRect` here to avoid shaking.\n       */\n\n\n      var fixedWidth = Math.floor(width);\n      var fixedHeight = Math.floor(height);\n\n      if (_this.state.width !== fixedWidth || _this.state.height !== fixedHeight) {\n        _this.setState({\n          width: fixedWidth,\n          height: fixedHeight\n        });\n\n        if (onResize) {\n          onResize();\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ReactResizeObserver, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroyObserver();\n    }\n  }, {\n    key: \"onComponentUpdated\",\n    value: function onComponentUpdated() {\n      var disabled = this.props.disabled;\n      var element = findDOMNode(this);\n\n      if (!this.resizeObserver && !disabled && element) {\n        // Add resize observer\n        this.resizeObserver = new ResizeObserver(this.onResize);\n        this.resizeObserver.observe(element);\n      } else if (disabled) {\n        // Remove resize observer\n        this.destroyObserver();\n      }\n    }\n  }, {\n    key: \"destroyObserver\",\n    value: function destroyObserver() {\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n        this.resizeObserver = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$children = this.props.children,\n          children = _this$props$children === void 0 ? null : _this$props$children;\n      return children;\n    }\n  }]);\n\n  return ReactResizeObserver;\n}(React.Component);\n\nexport default ReactResizeObserver;\n//# sourceMappingURL=resizeObserver.js.map\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport calculateNodeHeight from './calculateNodeHeight';\nimport { ConfigConsumer } from '../config-provider';\nimport ResizeObserver from '../_util/resizeObserver';\nimport raf from '../_util/raf';\n\nvar TextArea =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TextArea, _React$Component);\n\n  function TextArea() {\n    var _this;\n\n    _classCallCheck(this, TextArea);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextArea).apply(this, arguments));\n    _this.state = {\n      textareaStyles: {},\n      resizing: false\n    };\n\n    _this.saveTextAreaRef = function (textArea) {\n      _this.textAreaRef = textArea;\n    };\n\n    _this.handleTextareaChange = function (e) {\n      if (!('value' in _this.props)) {\n        _this.resizeTextarea();\n      }\n\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange(e);\n      }\n    };\n\n    _this.handleKeyDown = function (e) {\n      var _this$props = _this.props,\n          onPressEnter = _this$props.onPressEnter,\n          onKeyDown = _this$props.onKeyDown;\n\n      if (e.keyCode === 13 && onPressEnter) {\n        onPressEnter(e);\n      }\n\n      if (onKeyDown) {\n        onKeyDown(e);\n      }\n    };\n\n    _this.resizeOnNextFrame = function () {\n      raf.cancel(_this.nextFrameActionId);\n      _this.nextFrameActionId = raf(_this.resizeTextarea);\n    };\n\n    _this.resizeTextarea = function () {\n      var autosize = _this.props.autosize;\n\n      if (!autosize || !_this.textAreaRef) {\n        return;\n      }\n\n      var minRows = autosize.minRows,\n          maxRows = autosize.maxRows;\n      var textareaStyles = calculateNodeHeight(_this.textAreaRef, false, minRows, maxRows);\n\n      _this.setState({\n        textareaStyles: textareaStyles,\n        resizing: true\n      }, function () {\n        raf.cancel(_this.resizeFrameId);\n        _this.resizeFrameId = raf(function () {\n          _this.setState({\n            resizing: false\n          });\n        });\n      });\n    };\n\n    _this.renderTextArea = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n      var _this$state = _this.state,\n          textareaStyles = _this$state.textareaStyles,\n          resizing = _this$state.resizing;\n      var _this$props2 = _this.props,\n          customizePrefixCls = _this$props2.prefixCls,\n          className = _this$props2.className,\n          disabled = _this$props2.disabled,\n          autosize = _this$props2.autosize;\n\n      var props = __rest(_this.props, []);\n\n      var otherProps = omit(props, ['prefixCls', 'onPressEnter', 'autosize']);\n      var prefixCls = getPrefixCls('input', customizePrefixCls);\n      var cls = classNames(prefixCls, className, _defineProperty({}, \"\".concat(prefixCls, \"-disabled\"), disabled));\n\n      var style = _extends({}, props.style, textareaStyles, resizing ? {\n        overflow: 'hidden'\n      } : null); // Fix https://github.com/ant-design/ant-design/issues/6776\n      // Make sure it could be reset when using form.getFieldDecorator\n\n\n      if ('value' in otherProps) {\n        otherProps.value = otherProps.value || '';\n      }\n\n      return React.createElement(ResizeObserver, {\n        onResize: _this.resizeOnNextFrame,\n        disabled: !autosize\n      }, React.createElement(\"textarea\", _extends({}, otherProps, {\n        className: cls,\n        style: style,\n        onKeyDown: _this.handleKeyDown,\n        onChange: _this.handleTextareaChange,\n        ref: _this.saveTextAreaRef\n      })));\n    };\n\n    return _this;\n  }\n\n  _createClass(TextArea, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.resizeTextarea();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // Re-render with the new content then recalculate the height as required.\n      if (prevProps.value !== this.props.value) {\n        this.resizeTextarea();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      raf.cancel(this.nextFrameActionId);\n      raf.cancel(this.resizeFrameId);\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.textAreaRef.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.textAreaRef.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderTextArea);\n    }\n  }]);\n\n  return TextArea;\n}(React.Component);\n\npolyfill(TextArea);\nexport default TextArea;\n//# sourceMappingURL=TextArea.js.map\n","// Thanks to https://github.com/andreypopp/react-textarea-autosize/\n\n/**\n * calculateNodeHeight(uiTextNode, useCache = false)\n */\nvar HIDDEN_TEXTAREA_STYLE = \"\\n  min-height:0 !important;\\n  max-height:none !important;\\n  height:0 !important;\\n  visibility:hidden !important;\\n  overflow:hidden !important;\\n  position:absolute !important;\\n  z-index:-1000 !important;\\n  top:0 !important;\\n  right:0 !important\\n\";\nvar SIZING_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'font-variant', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing'];\nvar computedStyleCache = {};\nvar hiddenTextarea;\nexport function calculateNodeStyling(node) {\n  var useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var nodeRef = node.getAttribute('id') || node.getAttribute('data-reactid') || node.getAttribute('name');\n\n  if (useCache && computedStyleCache[nodeRef]) {\n    return computedStyleCache[nodeRef];\n  }\n\n  var style = window.getComputedStyle(node);\n  var boxSizing = style.getPropertyValue('box-sizing') || style.getPropertyValue('-moz-box-sizing') || style.getPropertyValue('-webkit-box-sizing');\n  var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));\n  var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));\n  var sizingStyle = SIZING_STYLE.map(function (name) {\n    return \"\".concat(name, \":\").concat(style.getPropertyValue(name));\n  }).join(';');\n  var nodeInfo = {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize,\n    boxSizing: boxSizing\n  };\n\n  if (useCache && nodeRef) {\n    computedStyleCache[nodeRef] = nodeInfo;\n  }\n\n  return nodeInfo;\n}\nexport default function calculateNodeHeight(uiTextNode) {\n  var useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var minRows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var maxRows = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    document.body.appendChild(hiddenTextarea);\n  } // Fix wrap=\"off\" issue\n  // https://github.com/ant-design/ant-design/issues/6577\n\n\n  if (uiTextNode.getAttribute('wrap')) {\n    hiddenTextarea.setAttribute('wrap', uiTextNode.getAttribute('wrap'));\n  } else {\n    hiddenTextarea.removeAttribute('wrap');\n  } // Copy all CSS properties that have an impact on the height of the content in\n  // the textbox\n\n\n  var _calculateNodeStyling = calculateNodeStyling(uiTextNode, useCache),\n      paddingSize = _calculateNodeStyling.paddingSize,\n      borderSize = _calculateNodeStyling.borderSize,\n      boxSizing = _calculateNodeStyling.boxSizing,\n      sizingStyle = _calculateNodeStyling.sizingStyle; // Need to have the overflow attribute to hide the scrollbar otherwise\n  // text-lines will not calculated properly as the shadow will technically be\n  // narrower for content\n\n\n  hiddenTextarea.setAttribute('style', \"\".concat(sizingStyle, \";\").concat(HIDDEN_TEXTAREA_STYLE));\n  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || '';\n  var minHeight = Number.MIN_SAFE_INTEGER;\n  var maxHeight = Number.MAX_SAFE_INTEGER;\n  var height = hiddenTextarea.scrollHeight;\n  var overflowY;\n\n  if (boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    height += borderSize;\n  } else if (boxSizing === 'content-box') {\n    // remove padding, since height = content\n    height -= paddingSize;\n  }\n\n  if (minRows !== null || maxRows !== null) {\n    // measure height of a textarea with a single row\n    hiddenTextarea.value = ' ';\n    var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n\n    if (minRows !== null) {\n      minHeight = singleRowHeight * minRows;\n\n      if (boxSizing === 'border-box') {\n        minHeight = minHeight + paddingSize + borderSize;\n      }\n\n      height = Math.max(minHeight, height);\n    }\n\n    if (maxRows !== null) {\n      maxHeight = singleRowHeight * maxRows;\n\n      if (boxSizing === 'border-box') {\n        maxHeight = maxHeight + paddingSize + borderSize;\n      }\n\n      overflowY = height > maxHeight ? '' : 'hidden';\n      height = Math.min(maxHeight, height);\n    }\n  }\n\n  return {\n    height: height,\n    minHeight: minHeight,\n    maxHeight: maxHeight,\n    overflowY: overflowY\n  };\n}\n//# sourceMappingURL=calculateNodeHeight.js.map\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n"],"sourceRoot":""}