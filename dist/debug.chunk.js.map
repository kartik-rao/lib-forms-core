{"version":3,"sources":["webpack://Forms/./src/views/DebugView.tsx"],"names":["DebugView","props","fStore","Error","localStore","errorList","Object","keys","errors","map","f","push","title","value","form","submitState","NOT_SUBMITTED","SUBMITTING","SUCCESS","error","successRedirect","submitErrorMessage","success","errorRedirect","submitSuccessMessage","content","bodyStyle","padding","extra","status","submitStateColor","text","style","marginRight","isSubmittable","isValid","key","span","numPages","numFields","length","touched","suffix","submitTarget","marginLeft","expectedSubmitResult","href","target","Item","color"],"mappings":"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","file":"debug.chunk.js","sourcesContent":["import * as React from \"react\";\nimport {Drawer, Switch, Card, Badge, Statistic, Row, Col, Button, List, Divider, Tag, Popover} from \"antd\";\nimport { formStoreContext } from '../store/FormStoreProvider';\nimport { useObserver, useLocalStore } from 'mobx-react';\nimport Layout from 'antd/lib/layout';\nimport { SubmitState } from '../models/form';\n\nexport interface DebugViewProps {\n    visible?: boolean;\n}\n\ntype SubmitStateColor = \"success\"|\"error\"|\"default\"|\"processing\" | \"default\";\ntype ExpectedSubmitResult = \"Redirect\" | \"Set Message\" | \"Default Message\";\n\nexport const DebugView : React.FC<DebugViewProps> = (props: DebugViewProps) => {\n    const fStore = React.useContext(formStoreContext);\n    if(!fStore) throw new Error(\"Store is  null\");\n\n    const localStore = useLocalStore(() => ({\n        get errorList() : {title: string, value: string}[] {\n            let errorList = [];\n            Object.keys(fStore.errors).map((f)=> {\n                fStore.errors[f] && errorList.push({title: f, value: fStore.errors[f]});\n            });\n            return errorList;\n        },\n        get submitStateColor() : SubmitStateColor {\n            return fStore.form.submitState == SubmitState.NOT_SUBMITTED ? \"default\" :\n                        fStore.form.submitState == SubmitState.SUBMITTING ? \"processing\" :\n                            fStore.form.submitState == SubmitState.SUCCESS ? \"success\" : \"error\"\n        },\n        get expectedSubmitResult() : {error: ExpectedSubmitResult, success: ExpectedSubmitResult} {\n            return {\n                error: fStore.form.successRedirect ? \"Redirect\" : fStore.form.submitErrorMessage ? \"Set Message\" : \"Default Message\",\n                success: fStore.form.errorRedirect ? \"Redirect\" : fStore.form.submitSuccessMessage ? \"Set Message\" : \"Default Message\"\n            }\n        }\n    }));\n\n    return useObserver(() => {\n        return <Card title={fStore.form.content.title || \"Untitled Form\"} bodyStyle={{padding: 10}} extra={<span>\n                <Badge status={localStore.submitStateColor} text=\"Submiting\" style={{marginRight: '15px'}}/>\n                <Badge status={fStore.isSubmittable ? \"success\" : \"error\"} text=\"Can Submit\" style={{marginRight: '15px'}}/>\n                <Badge status={fStore.isValid ? \"success\" : \"error\"} text=\"Is Valid\" style={{marginRight: '15px'}}/>\n            </span>}>\n            <Row key=\"stats\">\n                <Col span={6}><Statistic title=\"Pages\" value={fStore.form.numPages}/></Col>\n                <Col span={6}><Statistic title=\"Fields\" value={fStore.form.numFields}/></Col>\n                <Col span={6}><Statistic title=\"Errors\" value={fStore.form.errors ? fStore.form.errors.length : 0}/></Col>\n                <Col span={6}><Statistic title=\"Touched\" value={Object.keys(fStore.touched).length} suffix={`/ ${fStore.form.numFields}`}/></Col>\n            </Row>\n            <Divider key=\"divider-submitinfo\"/>\n            <Row key=\"submit-info\">\n                <div><h3>Submit settings</h3></div>\n                <Col span={12}><strong>Submit Target - </strong>{fStore.form.submitTarget ? <span style={{marginLeft: \"5px\"}}>Set</span> : <span style={{marginLeft: \"5px\"}}>Not Set</span>}</Col>\n                <Col span={12}><strong>Status - </strong>{<span style={{marginLeft: \"5px\"}}>{fStore.form.submitState}</span>}</Col>\n            </Row>\n            <Divider key=\"divider-outcomes\"/>\n            <Row>\n                <div><h3>Submit Outcome</h3></div>\n                <Col span={12}><strong>On Success - </strong> <span style={{marginLeft: \"5px\"}}>{localStore.expectedSubmitResult.success}</span></Col>\n                <Col span={12}><strong>On Error - </strong> <span style={{marginLeft: \"5px\"}}>{localStore.expectedSubmitResult.error}</span></Col>\n            </Row>\n            <Divider key=\"divider-messages\"/>\n            <Row key=\"messages\">\n                <div><h3>Messages</h3></div>\n                <Col span={12}><strong>On Success - </strong>{fStore.form.submitSuccessMessage ? <Popover content={fStore.form.submitSuccessMessage}><span>Set</span></Popover> : <span>Default</span>}</Col>\n                <Col span={12}><strong>On Error - </strong>{fStore.form.submitErrorMessage ? <Popover content={fStore.form.submitErrorMessage}><span>Set</span></Popover> : <span>Default</span>}</Col>\n            </Row>\n            <Divider key=\"divider-redirects\"/>\n            <Row key=\"redirects\">\n                <div><h3>Redirects</h3></div>\n                <Col span={12}><strong>On Success - </strong>{fStore.form.successRedirect ? <a href=\"fStore.form.successRedirect\" target=\"_blank\">Link</a> : <span style={{marginLeft: \"5px\"}}>Not Set</span>}</Col>\n                <Col span={12}><strong>On Error - </strong>{fStore.form.errorRedirect ? <a href=\"fStore.form.errorRedirect\"  target=\"_blank\">Link</a> : <span style={{marginLeft: \"5px\"}}>Not Set</span>}</Col>\n            </Row>\n            <Divider key=\"divider-errors\"/>\n            <Row key=\"errors\">\n                <Col span={24}>\n                    <div><h3>Errors</h3>\n                    {fStore.errors && <List>\n                        {localStore.errorList.map((error) => {\n                            return <List.Item key={error.title}><strong>{error.title}</strong><Tag color=\"red\" style={{marginLeft: \"10px\"}}>{error.value}</Tag></List.Item>\n                        })}\n                    </List>}\n                    </div>\n                </Col>\n            </Row>\n        </Card>\n    })\n}"],"sourceRoot":""}